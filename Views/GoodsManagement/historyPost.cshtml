@model List<ranglerz_project.Models.TransactionAccount>

@{

    ViewBag.Title = "Reports";
    var sesion = Session["name"].ToString();
    int result1;
    int result2;
    var balance = ViewBag.openingBalance;
    var totalDebit = 0;
    var totalCredit = 0;
    var totalWeight = 0;
  
    string debCommas = null;
    string crCommas = null;
    string totalWeightCommas = null;
    string totalCreditCommas = null;
    string totaldebitCommas = null;
}











    <div class="container body">


        <div class="main_container">

            @{
                Html.RenderPartial("_Partial");
            }

            <!-- top navigation -->
            <!-- /top navigation -->
            <!-- page content -->
            <div class="right_col pull-left col-md-10 " role="main">
                <div class="">
                    <div class="page-title">
                        <div class="title_left">
                            <h3>
                              Production Reports
                            </h3>

                        </div>


                    </div>
                    <div class="clearfix"></div>
                    <div class="row">
                        <div class="x_content">
                            <br />
                            <form id="demo-form2" action="@Url.Action("historyPost", "GoodsManagement")" method="post" data-parsley-validate class="form-horizontal form-label-left">

                                <div class="form-group">

                                    <div class="col-md-6 col-sm-6 col-xs-12">
                                        <select name="search" required class="form-control chzn-select col-md-7 col-xs-12">
                                            <option value="@ViewBag.search">@ViewBag.search </option>
                                            @foreach (var tr in ViewBag.Mylist)
                                            {
                                                <option value="@tr.name">@tr.MainAccount.name -> @tr.name </option>
                                            }



                                        </select>
                                        <input type="date" id="dateDefault" name="dateStart" required />
                                        <input type="date" id="dateDefault2" name="dateEnd" required />
                                    </div>
                                    <div class="col-md-6 col-sm-6 col-xs-12">

                                        <input type="submit" value="Search" class="btn btn-success" />
                                    </div>
                                </div>
                                <div class="ln_solid"></div>


                            </form>




                        </div>

                    </div>

                    <div class="row">

                        <div class="col-md-12 col-sm-12 col-xs-12">
                            <div class="x_panel">
                                <div class="x_title">
                                    <div>
                                        <h2><strong>View Production Reports:</strong>@ViewBag.search &nbsp;&nbsp;&nbsp;<strong>Opening Balance(Rs.):</strong>@ViewBag.openingBalance</h2>
                                    </div>
                                    <div class="pull-right">
                                        <input type="button" class="btn btn-success" onclick="tableToExcel('testTable', 'W3C Example Table')" value="Export to Excel">
                                    </div>
                                    <div class="clearfix"></div>
                                </div>
                                <div class="x_content">
                                    <table id="testTable" class="table table-striped responsive-utilities jambo_table">
                                        <thead>
                                            <tr class="headings">


                                                <th>Date </th>
                                                <th>Type </th>
                                                <th>Code </th>
                                                <th>Description </th>


                                                <th>Dr(KG) </th>
                                                <th>Cr(KG) </th>

                                                <th>Quantity(KG)</th>
                                                @*<th>Action</th>*@

                                            </tr>
                                        </thead>

                                        <tbody>

                                            @foreach (var v in Model.OrderBy(x => x.id))
                                            {
                                                foreach (var t in v.Transactions.Where(x => x.voucher_type == "PRV" & x.is_active == "Y").OrderBy(x => x.created_at).ToList())
                                                {
                                                    result1 = DateTime.Compare(ViewBag.start, t.created_at);
                                                    result2 = DateTime.Compare(ViewBag.end, t.created_at);
                                                    debCommas = (String.Format("{0:,0}", t.dr));
                                                    crCommas = (String.Format("{0:,0}", t.cr));

                                                    if (result1 < 0 || result1 == 0)
                                                    {
                                                        if (result2 != -1)
                                                        {

                                                            <tr class="even pointer">


                                                                <td>@t.created_at.ToShortDateString()</td>




                                                                <td>@t.voucher_type</td>
                                                                <td>@t.voucher_code</td>
                                                                <td>@t.description <strong> From :</strong>  @t.from_account <strong>To :</strong>   @t.to_account </td>

                                                                @if (t.cr == 0)
                                                                {
                                                                    <td>@crCommas</td>
                                                                }
                                                                else
                                                                {
                                                                    <td>@t.net_weight</td>


                                                                    totalDebit = (int)(totalDebit + t.net_weight);

                                                                }

                                                                @if (t.dr == 0)
                                                                {
                                                                    <td>@debCommas</td>
                                                                }
                                                                else
                                                                {

                                                                    <td>@t.net_weight</td>


                                                                    totalCredit = (int)(totalCredit + t.net_weight);


                                                                }
                                                                @{
                                                            totalWeight = (int)(totalWeight + t.net_weight);




                                                                }
                                                                <td>@t.net_weight</td>
                                                                @*<td><a href="@Url.Action("Edit","Transactions" , new {id= @t.Id} )">Edit</a></td>*@





                                                            </tr>
                                                        }
                                                    }
                                                }
                                            }
                                        </tbody>

                                    </table>

                                    @{ 
                                        totalWeightCommas = (String.Format("{0:,0}", totalWeight));
                                        totalCreditCommas = (String.Format("{0:,0}", totalCredit));
                                        totaldebitCommas = (String.Format("{0:,0}", totalDebit));
                  
                                    }
                                    <p><strong>Total Weight(KG):&nbsp;&nbsp;&nbsp;</strong>@totalWeightCommas</p>
                                    <p><strong>Total Credit(KG):&nbsp;&nbsp;&nbsp;</strong>@totalCreditCommas</p>
                                    <p><strong>Total Debit(KG):&nbsp;&nbsp;&nbsp;</strong>@totaldebitCommas</p>

                                </div>
                            </div>
                        </div>

                        <br />
                        <br />
                        <br />

                    </div>
                </div>

            </div>
            <!-- /page content -->
        </div>

    </div>


    <script type="text/javascript">
        function confirm_delete() {
            return confirm('are you sure?');
        }
    </script>


    <script>
        function setInputDate(_id) {
            var _dat = document.querySelector(_id);
            var hoy = new Date(),
                d = hoy.getDate(),
                m = hoy.getMonth() + 1,
                y = hoy.getFullYear(),
                data;

            if (d < 10) {
                d = "0" + d;
            };
            if (m < 10) {
                m = "0" + m;
            };

            data = y + "-" + m + "-" + d;
            console.log(data);
            _dat.value = data;
        };

        setInputDate("#dateDefault");
    </script>
    <script>
        function setInputDate(_id) {
            var _dat = document.querySelector(_id);
            var hoy = new Date(),
                d = hoy.getDate(),
                m = hoy.getMonth() + 1,
                y = hoy.getFullYear(),
                data;

            if (d < 10) {
                d = "0" + d;
            };
            if (m < 10) {
                m = "0" + m;
            };

            data = y + "-" + m + "-" + d;
            console.log(data);
            _dat.value = data;
        };

        setInputDate("#dateDefault2");
    </script>


    <script type="text/javascript">
    var tableToExcel = (function () {
        var uri = 'data:application/vnd.ms-excel;base64,'
          , template = '<html xmlns:o="urn:schemas-microsoft-com:office:office" xmlns:x="urn:schemas-microsoft-com:office:excel" xmlns="http://www.w3.org/TR/REC-html40"><head><!--[if gte mso 9]><xml><x:ExcelWorkbook><x:ExcelWorksheets><x:ExcelWorksheet><x:Name>{worksheet}</x:Name><x:WorksheetOptions><x:DisplayGridlines/></x:WorksheetOptions></x:ExcelWorksheet></x:ExcelWorksheets></x:ExcelWorkbook></xml><![endif]--></head><body><table>{table}</table></body></html>'
          , base64 = function (s) { return window.btoa(unescape(encodeURIComponent(s))) }
          , format = function (s, c) { return s.replace(/{(\w+)}/g, function (m, p) { return c[p]; }) }
        return function (table, name) {
            if (!table.nodeType) table = document.getElementById(table)
            var ctx = { worksheet: name || 'Worksheet', table: table.innerHTML }
            window.location.href = uri + base64(format(template, ctx))
        }
    })()
    </script>




















