@model  ranglerz_project.Models.SubHeadAccount
@{
    ranglerz_project.Services.TransactionServices service = new ranglerz_project.Services.TransactionServices();
   
    ViewBag.Title = "MainReportsPostSub";
    var sesion = Session["name"].ToString();
    int result1;
    int result2;
    var balance = 0;
    var totalDebit = 0;
    var totalCredit = 0;
    var totalBalance = 0;
    string values = null;
    string drCommas = null;
    string crCommas = null;
    string totalBalanceCommas = null;
    string totalCreditCommas = null;
    string totaldebitCommas = null;

    int expenseReportEdit = Convert.ToInt32(Session["expense_reports_edit"]);
}











    <div class="container body">


        <div class="main_container">

            @{
                Html.RenderPartial("_Partial");
            }

            <!-- top navigation -->
            <!-- /top navigation -->
            <!-- page content -->
            <div class="right_col col-md-10 pull-right" role="main">





                <div class="x_title">
                    <h2>Search By SubHead <small></small></h2>
                    <div class="clearfix"></div>
                </div>






                <div class="x_content">
                    <br />
                    <form id="demo-form2" action="@Url.Action("mainReportsPostSub", "Transactions")" method="post" data-parsley-validate class="form-horizontal form-label-left">

                        <div class="form-group">

                            <div class="col-md-6 col-sm-6 col-xs-12">
                                <select name="search" required class="form-control chzn-select col-md-7 col-xs-12">
                                    <option value="@ViewBag.search">@ViewBag.search </option>
                                    @foreach (var tr in ViewBag.subHeadAccounts)
                                    {


                                        <option value="@tr.name">@tr.MainAccount.name -> @tr.HeadAccount.name ->  @tr.name </option>

                                    }


                                </select>
                                <input type="date" id="dateDefault" name="dateStart" required />
                                <input type="date" id="dateDefault2" name="dateEnd" required />
                            </div>
                            <div class="col-md-6 col-sm-6 col-xs-12">

                                <input type="submit" value="Search" class="btn btn-success" />
                            </div>
                        </div>


                    </form>

                </div>





































                <div class="row">

                    <div class="col-md-12 col-sm-12 col-xs-12">
                        <div class="x_panel">
                            <div class="x_title">
                                <div>
                                    <h2>@ViewBag.search</h2>
                                </div>
                                <div class="pull-right">
                                    <input type="button" class="btn btn-success" onclick="tableToExcel('testTable', 'W3C Example Table')" value="Export to Excel">
                                </div>
                                <div class="clearfix"></div>
                            </div>
                            <div class="x_content">
                                <table id="testTable" class="table table-striped responsive-utilities jambo_table">
                                    <thead>
                                        <tr class="headings">



                                            <th>Account Name </th>
                                            @*<th>Opening Balance</th>*@
                                            <th>Total Debit </th>
                                            <th>Total Credit </th>
                                            <th>Balance</th>

                                        </tr>
                                    </thead>

                                    <tbody>

                                        @foreach (var trans in Model.TransactionAccounts.Where(x => x.is_active == "Y"))
                                        {



                                            balance = service.findOpeningBalancebeforeDate(ViewBag.start, trans.name);

                                            var credit = 0;
                                            var debit = 0;
                                            //if (trans.parent !=null)
                                            //{
                                            //    balance =Convert.ToInt32(trans.parent);
                                            //}
                                            //else
                                            //{
                                            //    balance = 0;
                                            //}


                                            foreach (var t in trans.Transactions.Where(x => x.is_active == "Y").OrderBy(x => x.created_at).ToList())
                                            {





                                                result1 = DateTime.Compare(ViewBag.start, Convert.ToDateTime(t.created_at));
                                                result2 = DateTime.Compare(ViewBag.end, Convert.ToDateTime(t.created_at));
                                                crCommas = (String.Format("{0:0,0}", t.cr));
                                                drCommas = (String.Format("{0:0,0}", t.dr));


                                                if (t.extra == "Sale" && trans.main_id != 12)
                                                {
                                                    continue;
                                                }
                                                if (t.cr == 0 && t.dr == 0)
                                                {
                                                    continue;
                                                }

                                                if (result1 < 0 || result1 == 0)
                                                {


                                                    if (result2 != -1)
                                                    {

                                                        credit = credit + t.cr;
                                                        debit = debit + t.dr;



                                                    }
                                                }
                                            }


                                            <tr>



                                                @{
                                            balance = credit - debit + balance;
                                            totalBalance = totalBalance + balance;
                                            totalCredit = totalCredit + credit;
                                            totalDebit = totalDebit + debit;
                                                }

                                                <td>@trans.name</td>
                                                @*<td>@trans.parent</td>*@
                                                <td>@credit</td>
                                                <td>@debit</td>

                                                <td>@balance</td>



                                            </tr>


                                        }


                                        <tr style="background-color:#3f5367; color:#fff">
                                            <td>TOTAL</td>
                                            @*<td>0</td>*@

                                            <td>@totalCredit</td>
                                            <td>@totalDebit</td>

                                            <td>@totalBalance</td>
                                        </tr>




                                    </tbody>

                                </table>


                            </div>
                        </div>
                    </div>

                    <br />
                    <br />
                    <br />

                </div>
            </div>

        </div>
        <!-- /page content -->
    </div>

  

   

    <script>
    function setInputDate(_id) {
        var _dat = document.querySelector(_id);
        var hoy = new Date(),
            d = hoy.getDate(),
            m = hoy.getMonth() + 1,
            y = hoy.getFullYear(),
            data;

        if (d < 10) {
            d = "0" + d;
        };
        if (m < 10) {
            m = "0" + m;
        };

        data = y + "-" + m + "-" + d;
        console.log(data);
        _dat.value = data;
    };

    setInputDate("#dateDefault");
    </script>
    <script>
        function setInputDate(_id) {
            var _dat = document.querySelector(_id);
            var hoy = new Date(),
                d = hoy.getDate(),
                m = hoy.getMonth() + 1,
                y = hoy.getFullYear(),
                data;

            if (d < 10) {
                d = "0" + d;
            };
            if (m < 10) {
                m = "0" + m;
            };

            data = y + "-" + m + "-" + d;
            console.log(data);
            _dat.value = data;
        };

        setInputDate("#dateDefault2");
    </script>





    <script type="text/javascript">
    var tableToExcel = (function () {
        var uri = 'data:application/vnd.ms-excel;base64,'
          , template = '<html xmlns:o="urn:schemas-microsoft-com:office:office" xmlns:x="urn:schemas-microsoft-com:office:excel" xmlns="http://www.w3.org/TR/REC-html40"><head><!--[if gte mso 9]><xml><x:ExcelWorkbook><x:ExcelWorksheets><x:ExcelWorksheet><x:Name>{worksheet}</x:Name><x:WorksheetOptions><x:DisplayGridlines/></x:WorksheetOptions></x:ExcelWorksheet></x:ExcelWorksheets></x:ExcelWorkbook></xml><![endif]--></head><body><table>{table}</table></body></html>'
          , base64 = function (s) { return window.btoa(unescape(encodeURIComponent(s))) }
          , format = function (s, c) { return s.replace(/{(\w+)}/g, function (m, p) { return c[p]; }) }
        return function (table, name) {
            if (!table.nodeType) table = document.getElementById(table)
            var ctx = { worksheet: name || 'Worksheet', table: table.innerHTML }
            window.location.href = uri + base64(format(template, ctx))
        }
    })()
    </script>











